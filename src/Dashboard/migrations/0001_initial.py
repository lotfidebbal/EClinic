# Generated by Django 5.0.1 on 2024-01-28 09:51

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=256, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('firstName', models.CharField(max_length=256)),
                ('lastName', models.CharField(max_length=256)),
                ('dateOfBirth', models.DateField()),
                ('address', models.CharField(max_length=256)),
                ('phoneNumber', models.CharField(max_length=20, unique=True, validators=[django.core.validators.RegexValidator('^(00213|\\+213|0)(5|6|7)\\d{8}$')])),
                ('email', models.CharField(max_length=254, unique=True, validators=[django.core.validators.EmailValidator()])),
                ('gender', models.CharField(choices=[('MALE', 'Male'), ('FEMALE', 'Female')], max_length=10)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Speciality',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=256, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='MedicalStaff',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('firstName', models.CharField(max_length=256)),
                ('lastName', models.CharField(max_length=256)),
                ('dateOfBirth', models.DateField()),
                ('address', models.CharField(max_length=256)),
                ('phoneNumber', models.CharField(max_length=20, unique=True, validators=[django.core.validators.RegexValidator('^(00213|\\+213|0)(5|6|7)\\d{8}$')])),
                ('email', models.CharField(max_length=254, unique=True, validators=[django.core.validators.EmailValidator()])),
                ('gender', models.CharField(choices=[('MALE', 'Male'), ('FEMALE', 'Female')], max_length=10)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Dashboard.department')),
                ('speciality', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Dashboard.speciality')),
            ],
        ),
        migrations.CreateModel(
            name='MedicalHistory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('notes', models.TextField(blank=True, null=True)),
                ('allergies', models.TextField(blank=True, null=True)),
                ('surgeries', models.TextField(blank=True, null=True)),
                ('medications', models.TextField(blank=True, null=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('patient', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Dashboard.patient')),
            ],
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField()),
                ('state', models.CharField(blank=True, choices=[('SCHEDULED', 'Scheduled'), ('COMPLETED', 'Completed'), ('CANCELED', 'Canceled')], default='SCHEDULED', max_length=15)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Dashboard.patient')),
            ],
        ),
        migrations.CreateModel(
            name='Prescription',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('content', models.TextField()),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Dashboard.appointment')),
            ],
        ),
        migrations.CreateModel(
            name='Procedure',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=256, unique=True)),
                ('type', models.CharField(choices=[('MEDICAL', 'Medical'), ('ADMINISTRATIVE', 'Administrative')], max_length=20)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Dashboard.department')),
            ],
        ),
        migrations.CreateModel(
            name='ProcedureApplication',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('report', models.TextField(blank=True, null=True)),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Dashboard.appointment')),
                ('medicalStaff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Dashboard.medicalstaff')),
                ('procedure', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Dashboard.procedure')),
            ],
            options={
                'unique_together': {('appointment', 'medicalStaff', 'procedure')},
            },
        ),
    ]
